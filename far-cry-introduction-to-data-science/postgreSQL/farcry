--
-- PostgreSQL database dump
--

-- Dumped from database version 10.10 (Ubuntu 10.10-0ubuntu0.18.04.1)
-- Dumped by pg_dump version 10.10 (Ubuntu 10.10-0ubuntu0.18.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: get_killer_class(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_killer_class(weapon_code text) RETURNS text
    LANGUAGE plpgsql
    AS $$ DECLARE weapon_class TEXT;
BEGIN CASE
  WHEN weapon_code IN ('Machete', 'Falcon', 'MP5') THEN weapon_class = 'Hitman';
  WHEN weapon_code IN ('SniperRifle') THEN weapon_class = 'Sniper';
  WHEN weapon_code IN ('AG36', 'OICW', 'P90', 'M4', 'Shotgun', 'M249') THEN weapon_class = 'Commando';
  WHEN weapon_code IN (
    'Rocket',
    'VehicleRocket',
    'HandGrenade',
    'StickExplosive',
    'Boat',
    'Vehicle',
    'VehicleMountedRocketMG',
    'VehicleMountedAutoMG',
    'MG',
    'VehicleMountedMG',
    'OICWGrenade',
    'AG36Grenade'
  ) THEN weapon_class = 'Psychopath';
END CASE;
RETURN weapon_class;
END;
$$;


ALTER FUNCTION public.get_killer_class(weapon_code text) OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: match; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.match (
    match_id uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    start_time timestamp(3) with time zone NOT NULL,
    end_time timestamp(3) with time zone NOT NULL,
    game_mode text NOT NULL,
    map_name text NOT NULL
);


ALTER TABLE public.match OWNER TO postgres;

--
-- Name: match_frag; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.match_frag (
    match_id uuid NOT NULL,
    frag_time timestamp(3) with time zone NOT NULL,
    killer_name text NOT NULL,
    victim_name text,
    weapon_code text
);


ALTER TABLE public.match_frag OWNER TO postgres;

--
-- Name: match pk_match_match_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.match
    ADD CONSTRAINT pk_match_match_id PRIMARY KEY (match_id);


--
-- Name: match_frag fk_match_frag_match_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.match_frag
    ADD CONSTRAINT fk_match_frag_match_id FOREIGN KEY (match_id) REFERENCES public.match(match_id) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- PostgreSQL database dump complete
--

